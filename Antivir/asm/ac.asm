; That code was generated by MrLolthe1st disassembler v0.0.1
jmp short +90
;+0 : EB58
nop
;+2 : 90
inc dx
;+3 : 42
outsw
;+4 : 6F
outsw
;+5 : 6F
jz short +88
;+6 : 7450
jc short +121
;+8 : 726F
;Address size override
add byte [eax], al
;+10 : 670000
add byte [bx+si], al
;+13 : 0000
add byte [bx+si], al
;+15 : 0000
add byte [bx+si], al
;+17 : 0000
add byte [bx+si], al
;+19 : 0000
add byte [bx+si], al
;+21 : 0000
add byte [bx+si], al
;+23 : 0000
add byte [bx+si], al
;+25 : 0000
add byte [bx+si], al
;+27 : 0000
add byte [bx+si], al
;+29 : 0000
add byte [bx+si], al
;+31 : 0000
add byte [bx+si], al
;+33 : 0000
add byte [bx+si], al
;+35 : 0000
add byte [bx+si], al
;+37 : 0000
add byte [bx+si], al
;+39 : 0000
add byte [bx+si], al
;+41 : 0000
add byte [bx+si], al
;+43 : 0000
add byte [bx+si], al
;+45 : 0000
add byte [bx+si], al
;+47 : 0000
add byte [bx+si], al
;+49 : 0000
add byte [bx+si], al
;+51 : 0000
add byte [bx+si], al
;+53 : 0000
add byte [bx+si], al
;+55 : 0000
add byte [bx+si], al
;+57 : 0000
add byte [bx+si], al
;+59 : 0000
add byte [bx+si], al
;+61 : 0000
add byte [bx+si], al
;+63 : 0000
add byte [bx+si], al
;+65 : 0000
add byte [bx+si], al
;+67 : 0000
add byte [bx+si], al
;+69 : 0000
dec si
;+71 : 4E
dec di
;+72 : 4F
and byte [bp+65], cl
;+73 : 204E41
dec bp
;+76 : 4D
inc bp
;+77 : 45
and byte [bx+si], ah
;+78 : 2020
and byte [bx+si], ah
;+80 : 2020
inc si
;+82 : 46
inc cx
;+83 : 41
push sp
;+84 : 54
xor si, word [bp+si]
;+85 : 3332
and byte [bx+si], ah
;+87 : 2020
and ah, bh
;+89 : 20FC
mov ax, 36864
;+91 : B80090
mov es, ax
;+94 : 8EC0
sub ax, 128
;+96 : 2D8000
mov ss, ax
;+99 : 8ED0
mov sp, 2048
;+101 : BC0008
mov cx, 256
;+104 : B90001
mov si, 31744
;+107 : BE007C
xor di, di
;+110 : 31FF
mov ds, di
;+112 : 8EDF
repz movsw
;+114 : F3A5
push es
;+116 : 06
push byte 120
;+117 : 6A78
retf
;+119 : CB
push cs
;+120 : 0E
pop ds
;+121 : 1F
mov byte [64], dl
;+122 : 88164000
and byte [47], 15
;+126 : 80262F000F
;Opcode size override
mov esi, dword [44]
;+131 : 668B362C00
push ax
;+136 : 50
mov ax, 2048
;+137 : B80008
mov es, ax
;+140 : 8EC0
pop ax
;+142 : 58
xor bx, bx
;+143 : 31DB
call +236
;+145 : E85800
;Opcode size override
push esi
;+148 : 6656
pushf
;+150 : 9C
push ax
;+151 : 50
mov ax, 2048
;+152 : B80008
mov es, ax
;+155 : 8EC0
pop ax
;+157 : 58
xor di, di
;+158 : 31FF
mov si, 499
;+160 : BEF301
mov al, [13]
;+163 : A00D00
cbw
;+166 : 98
mul word [11]
;+167 : F7260B00
shr ax, 5
;+171 : C1E805
mov dx, ax
;+174 : 89C2
mov cx, 11
;+176 : B90B00
;ES Override
cmp byte [es:di], ch
;+179 : 26382D
jnz short +-69
;+182 : 7503
jmp +394
;+184 : E9CF00
pusha
;+187 : 60
repz cmpsb
;+188 : F3A6
popa
;+190 : 61
jz short +-49
;+191 : 740E
add di, 32
;+193 : 83C720
dec dx
;+196 : 4A
jnz short -77
;+197 : 75EC
popf
;+199 : 9D
;Opcode size override
pop esi
;+200 : 665E
jc short -120
;+202 : 72BC
jmp +394
;+204 : E9BB00
;ES Override
push word [es:di+20]
;+207 : 26FF7514
;ES Override
push word [es:di+26]
;+211 : 26FF751A
;Opcode size override
pop esi
;+215 : 665E
push ax
;+217 : 50
mov ax, 2048
;+218 : B80008
mov es, ax
;+221 : 8EC0
pop ax
;+223 : 58
xor bx, bx
;+224 : 31DB
call +236
;+226 : E80700
jc short -30
;+229 : 72FB
jmp 0:32768
;+231 : EA00800000
mov ax, [11]
;+236 : A10B00
shr ax, 2
;+239 : C1E802
;Opcode size override
cwde
;+242 : 6698
;Opcode size override
mov ebp, esi
;+244 : 6689F5
;Opcode size override
xchg eax, esi
;+247 : 6696
;Opcode size override
cdq
;+249 : 6699
;Opcode size override
div esi
;+251 : 66F7F6
;Opcode size override
movzx edi, word [14]
;+254 : 660FB73E0E00
;Opcode size override
add eax, edi
;+260 : 6601F8
push dx
;+263 : 52
mov cx, 1
;+264 : B90100
call +343
;+267 : E84900
pop si
;+270 : 5E
add si, si
;+271 : 01F6
add si, si
;+273 : 01F6
;ES Override
and byte [es:si+3], 15
;+275 : 268064030F
;ES Override
;Opcode size override
mov esi, dword [es:si]
;+280 : 26668B34
;Opcode size override
;Address size override
lea eax,  [ebp-2]
;+284 : 66678D45FE
;Opcode size override
movzx ecx, byte [13]
;+289 : 660FB60E0D00
;Opcode size override
mul ecx
;+295 : 66F7E1
;Opcode size override
mov ebp, eax
;+298 : 6689C5
;Opcode size override
movzx eax, byte [16]
;+301 : 660FB6061000
;Opcode size override
mul dword [36]
;+307 : 66F7262400
;Opcode size override
add eax, ebp
;+312 : 6601E8
;Opcode size override
add eax, edi
;+315 : 6601F8
call +343
;+318 : E81600
mov ax, [11]
;+321 : A10B00
shr ax, 4
;+324 : C1E804
mul cx
;+327 : F7E1
mov cx, es
;+329 : 8CC1
add cx, ax
;+331 : 01C1
mov es, cx
;+333 : 8EC1
;Opcode size override
cmp esi, 268435448
;+335 : 6681FEF8FFFF0F
ret
;+342 : C3
;Opcode size override
pushad
;+343 : 6660
pusha
;+345 : 60
push byte 0
;+346 : 6A00
push byte 0
;+348 : 6A00
;Opcode size override
push eax
;+350 : 6650
push es
;+352 : 06
push bx
;+353 : 53
push byte 1
;+354 : 6A01
push byte 16
;+356 : 6A10
mov ah, 66
;+358 : B442
mov dl, byte [64]
;+360 : 8A164000
mov si, sp
;+364 : 89E6
push ss
;+366 : 16
pop ds
;+367 : 1F
int 19
;+368 : CD13
push cs
;+370 : 0E
pop ds
;+371 : 1F
jc short +-118
;+372 : 7214
add sp, 16
;+374 : 83C410
popa
;+377 : 61
dec cx
;+378 : 49
jz short +-121
;+379 : 740A
add bx, word [11]
;+381 : 031E0B00
;Opcode size override
add eax, 1
;+385 : 6683C001
jmp short 89
;+389 : EBD2
;Opcode size override
popad
;+391 : 6661
ret
;+393 : C3
mov ax, 3653
;+394 : B8450E
int 16
;+397 : CD10
jmp short -113
;+399 : EBFE
add byte [bx+si], al
;+401 : 0000
add byte [bx+si], al
;+403 : 0000
add byte [bx+si], al
;+405 : 0000
add byte [bx+si], al
;+407 : 0000
add byte [bx+si], al
;+409 : 0000
add byte [bx+si], al
;+411 : 0000
add byte [bx+si], al
;+413 : 0000
add byte [bx+si], al
;+415 : 0000
add byte [bx+si], al
;+417 : 0000
add byte [bx+si], al
;+419 : 0000
add byte [bx+si], al
;+421 : 0000
add byte [bx+si], al
;+423 : 0000
add byte [bx+si], al
;+425 : 0000
add byte [bx+si], al
;+427 : 0000
add byte [bx+si], al
;+429 : 0000
add byte [bx+si], al
;+431 : 0000
add byte [bx+si], al
;+433 : 0000
add byte [bx+si], al
;+435 : 0000
add byte [bx+si], al
;+437 : 0000
add byte [bx+si], al
;+439 : 0000
add byte [bx+si], al
;+441 : 0000
add byte [bx+si], al
;+443 : 0000
add byte [bx+si], al
;+445 : 0000
add byte [bx+si], al
;+447 : 0000
add byte [bx+si], al
;+449 : 0000
add byte [bx+si], al
;+451 : 0000
add byte [bx+si], al
;+453 : 0000
add byte [bx+si], al
;+455 : 0000
add byte [bx+si], al
;+457 : 0000
add byte [bx+si], al
;+459 : 0000
add byte [bx+si], al
;+461 : 0000
add byte [bx+si], al
;+463 : 0000
add byte [bx+si], al
;+465 : 0000
add byte [bx+si], al
;+467 : 0000
add byte [bx+si], al
;+469 : 0000
add byte [bx+si], al
;+471 : 0000
add byte [bx+si], al
;+473 : 0000
add byte [bx+si], al
;+475 : 0000
add byte [bx+si], al
;+477 : 0000
add byte [bx+si], al
;+479 : 0000
add byte [bx+si], al
;+481 : 0000
add byte [bx+si], al
;+483 : 0000
add byte [bx+si], al
;+485 : 0000
add byte [bx+si], al
;+487 : 0000
add byte [bx+si], al
;+489 : 0000
add byte [bx+si], al
;+491 : 0000
add byte [bx+si], al
;+493 : 0000
add byte [bx+si], al
;+495 : 0000
add byte [bx+si], al
;+497 : 0000
push bx
;+499 : 53
push sp
;+500 : 54
inc cx
;+501 : 41
push dx
;+502 : 52
push sp
;+503 : 54
push bp
;+504 : 55
push ax
;+505 : 50
and byte [bx+si], ah
;+506 : 2020
and byte [bx+si], ah
;+508 : 2020
push bp
;+510 : 55
stosb
;+511 : AA